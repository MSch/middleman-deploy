{"name":"Middleman Deploy","tagline":"Deploy a middleman built site over rsync, ftp, sftp, or git (e.g. gh-pages on github).","body":"# middleman-deploy [![Build Status](https://travis-ci.org/tvaughan/middleman-deploy.png?branch=master)](https://travis-ci.org/tvaughan/middleman-deploy)\r\n\r\nDeploys a [middleman](http://middlemanapp.com/) built site via **rsync**,\r\n**ftp**, **sftp**, or **git** (e.g. gh-pages on github).\r\n\r\n## Installation\r\n\r\nAdd this to the Gemfile of the repository of your middleman site:\r\n\r\n```ruby\r\ngem \"middleman-deploy\"\r\n```\r\n\r\nand run `bundle install`.\r\n\r\n## Usage\r\n\r\n```\r\n$ middleman build [--clean]\r\n$ middleman deploy [--build-before]\r\n```\r\n\r\nTo automatically run `middleman build` during `middleman deploy`, turn on the\r\n`build_before` option while activating the deploy extension:\r\n\r\n```ruby\r\nactivate :deploy do |deploy|\r\n  # ...\r\n  deploy.build_before = true # default: false\r\nend\r\n```\r\n\r\n## Possible Configurations\r\n\r\nMiddleman-deploy can deploy a site via rsync, ftp, sftp, or git.\r\n\r\n### rsync\r\n\r\nMake sure that `rsync` is installed, and activate the extension by adding the\r\nfollowing to `config.rb`:\r\n\r\n```ruby\r\nactivate :deploy do |deploy|\r\n  deploy.method = :rsync\r\n  deploy.user   = \"tvaughan\"\r\n  deploy.host   = \"www.example.com\"\r\n  deploy.path   = \"/srv/www/site\"\r\n  # Optional Settings\r\n  # deploy.port  = 5309 # ssh port, default: 22\r\n  # deploy.clean = true # remove orphaned files on remote host, default: false\r\nend\r\n```\r\n\r\n### Git (e.g. GitHub Pages)\r\n\r\nMake sure that `git` is installed, and activate the extension by adding the\r\nfollowing to `config.rb`:\r\n\r\n```ruby\r\nactivate :deploy do |deploy|\r\n  deploy.method = :git\r\n  # Optional Settings\r\n  # deploy.remote = \"custom-remote\" # remote name or git url, default: origin\r\n  # deploy.branch = \"custom-branch\" # default: gh-pages\r\nend\r\n```\r\n\r\nIf you use a remote name, you must first add it using `git remote add`. Run\r\n`git remote -v` to see a list of possible remote names. If you use a git url,\r\nit must end with '.git'.\r\n\r\nAfterwards, the `build` directory will become a git repo. This branch will be\r\ncreated on the remote if it doesn't already exist.\r\n\r\n### FTP\r\n\r\nActivate the extension by adding the following to `config.rb`:\r\n\r\n```ruby\r\nactivate :deploy do |deploy|\r\n  deploy.method   = :ftp\r\n  deploy.host     = \"ftp.example.com\"\r\n  deploy.user     = \"tvaughan\"\r\n  deploy.password = \"secret\"\r\n  deploy.path     = \"/srv/www/site\"\r\nend\r\n```\r\n\r\n### SFTP\r\n\r\nActivate the extension by adding the following to `config.rb`:\r\n\r\n```ruby\r\nactivate :deploy do |deploy|\r\n  deploy.method   = :sftp\r\n  deploy.host     = \"sftp.example.com\"\r\n  deploy.user     = \"tvaughan\"\r\n  deploy.password = \"secret\"\r\n  deploy.path     = \"/srv/www/site\"\r\nend\r\n```\r\n\r\n## Breaking Changes\r\n\r\n* `v0.1.0`\r\n    - Removed the `--clean` command-line option. This option only applied to\r\n      the rsync deploy method. The idea going forward is that command-line\r\n      options must apply to all deploy methods. Options that are specific to a\r\n      deploy method will only be available in `config.rb`.\r\n    - Removed `deploy` from the `after_build` hook. This caused a `deploy` to\r\n      be run each time `build` was called. This workflow never made\r\n      sense. `deploy` was added to the `after_build` hook simply because it\r\n      was available.\r\n\r\n## Thanks!\r\n\r\nA **BIG** thanks to\r\n[everyone who has contributed](https://github.com/tvaughan/middleman-deploy/graphs/contributors)!\r\nAlmost all pull requests are accepted.\r\n\r\n## Other\r\n\r\nInspired by the rsync task in\r\n[Octopress](https://github.com/imathis/octopress).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}